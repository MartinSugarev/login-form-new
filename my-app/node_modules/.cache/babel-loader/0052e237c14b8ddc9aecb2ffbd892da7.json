{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/new-login-form/my-app/src/components/protected.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { context } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  // const value = useContext(context)\n  console.log('protected route');\n  const [isAuth, SetIsAuth] = useState(false);\n\n  const downloadData = async () => {\n    await axios.get('http://localhost:4000').then(res => {\n      // const message = res.data\n      console.log(res.data);\n\n      if (res.data.msg === 'you are logged innnnn') {\n        SetIsAuth(true);\n      } else {\n        return;\n      }\n    });\n  };\n\n  useEffect(() => {\n    downloadData();\n    console.log(isAuth);\n  }, [isAuth]);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuth ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProtectedRoute, \"59csoYTvNZgAhIqmTTtIy6KjK6c=\");\n\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/macbookair/Desktop/new-login-form/my-app/src/components/protected.js"],"names":["React","useContext","Route","Redirect","context","ProtectedRoute","component","Component","rest","console","log","isAuth","SetIsAuth","useState","downloadData","axios","get","then","res","data","msg","useEffect","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAIA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAxB,EAA0D;AAAA;;AAEtE;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAChC,UAAMC,KAAK,CAACC,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAwCC,GAAG,IAAI;AACnD;AACCT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACC,IAAhB;;AAEA,UAAGD,GAAG,CAACC,IAAJ,CAASC,GAAT,KAAiB,uBAApB,EAA6C;AAC1CR,QAAAA,SAAS,CAAC,IAAD,CAAT;AACF,OAFD,MAEK;AACD;AACH;AACH,KATK,CAAN;AAUA,GAXD;;AAaAS,EAAAA,SAAS,CAAC,MAAM;AACfP,IAAAA,YAAY;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEA,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAMH,sBACG,QAAC,KAAD,OAAWH,IAAX;AAAiB,IAAA,MAAM,EAAGc,KAAD,IACjBX,MAAM,gBACJ,QAAC,SAAD,OAAeW;AAAf;AAAA;AAAA;AAAA;AAAA,YADI,gBAEJ,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,UADH;AAOI;;GAjCmBjB,c;;KAAAA,c","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { context } from './context'\n\n\n\nexport default function ProtectedRoute({ component: Component, ...rest }){\n    \n   // const value = useContext(context)\n    console.log('protected route');\n    \n    const [ isAuth, SetIsAuth ] = useState(false)   \n    \n    const downloadData = async () => {\n     await axios.get('http://localhost:4000').then(res => {\n       // const message = res.data\n        console.log(res.data);\n        \n        if(res.data.msg === 'you are logged innnnn' ){\n           SetIsAuth(true)\n        }else{\n            return\n        }\n     })\n    }\n    \n    useEffect(() => {\n     downloadData()\n     console.log(isAuth);\n     \n    }, [isAuth])\n\n return(\n    <Route {...rest} render={(props) => (\n            isAuth \n            ? <Component {...props} />\n            : <Redirect to='/' />\n    )} />\n )\n    }\n"]},"metadata":{},"sourceType":"module"}